plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

group = 'com.hab'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Spring Cache and Redis
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    // Spring Boot oauth2 client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // Spring Boot Send Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // https://mvnrepository.com/artifact/com.aliyun.oss/aliyun-sdk-oss
    implementation 'com.aliyun.oss:aliyun-sdk-oss:3.16.0'
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    // Mysql Connect
    implementation 'mysql:mysql-connector-java:8.0.33' // replace with the desired version
    // config JWT Generate project
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation 'org.springframework:spring-jdbc:6.0.13'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.2') // For Jackson JSON processor
    // https://mvnrepository.com/artifact/com.fasterxml.uuid/java-uuid-generator
    implementation 'com.fasterxml.uuid:java-uuid-generator:4.3.0'
    // Spring Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Spring autoconfigure Test
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    // Object match
    testImplementation 'org.hamcrest:hamcrest:2.1'

    testImplementation 'org.testcontainers:mysql'
    // JUnit Jupiter API and Engine for writing tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // Spring Boot test starter for testing Spring Boot applications
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:2.2.224'
    // https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.0'
    // Testcontainers for integration tests
    testImplementation 'org.testcontainers:junit-jupiter:1.16.0'
    testImplementation 'org.testcontainers:mysql:1.16.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
